const Discord = require("discord.js");

module.exports = {
    name: 'report',
    description: 'Report troublebreakers on the wiki in a quick way.',
    execute(message, args, Discord) {
        //Time Variable
        let currentDate = new Date();
        let time = currentDate.getHours() + ":" + currentDate.getMinutes();

        //Errors Handling
        if (message.member.roles.cache.has('883830761097162752')) {
            return message.channel.send('`ERROR: API reports that the user is blacklisted from using the %report command.`');
        } else if (!args.length) {
            return message.channel.send(`${message.author} dude you need to pass some arguments

%report <vandalism/user/issue> <link to the page> <reason (only required for issue or user reports)>`);
        } else if (args[1] === undefined) {
            return message.channel.send('`ERROR: API reports that the user did not pass a URL argument.`');
        } else if (!args[1].startsWith('https://jtoh.fandom.com/wiki/')) {
            return message.channel.send('`ERROR: API reports that the user sent an invalid URL.`');
        }
        
        //Vandalism Embed
        if (args[0] === 'vandalism') {
            if (!args[1].startsWith('https://jtoh.fandom.com/wiki/User:')) {
                return message.channel.send('`ERROR: API reports that the user did not send a user page.`');
            }

            const reportEmbed = new Discord.MessageEmbed()
            .setColor('#337800')
            .setTitle(`New Vandalism Report`)
            .setURL(`${args[1]}`)
            .setDescription(`New report generated by ${message.author}`)
            .addFields(
                {name: 'Reported User', value: `${args[1]}`},
                {name: 'Reporter', value: `${message.author}`},
            )
            .setFooter(`Today at ${time}`);

            message.reply({ embeds: [reportEmbed]});
            console.log(`Vandalism Report Created (reportCreated = true)`);
        } else if (args[0] === 'user') {
            if (!args[1].startsWith('https://jtoh.fandom.com/wiki/User:')) {
                return message.channel.send('`ERROR: API reports that the user did not send a user page.`');
            } else if (args[2] === undefined) {
                return message.channel.send(`${message.author} dude you need to tell us why you're reporting this guy`);
            } else if (args[3]) {
                return message.channel.send('Your report reason can only be 1 word!');
            }

            const reportEmbed = new Discord.MessageEmbed()
            .setColor('#337800')
            .setTitle(`New User Report`)
            .setURL(`${args[1]}`)
            .setDescription(`New report generated by ${message.author}`)
            .addFields(
                {name: 'Reported User', value: `${args[1]}`},
                {name: 'Reporter', value: `${message.author}`},
                {name: 'Reason', value: `${args[2]}`},
            )
            .setFooter(`Today at ${time}`);

            message.reply({ embeds: [reportEmbed]});
            console.log(`User Report Created (reportCreated = true)`);
        } else if (args[0] === 'issue') {
            if (args[2] === undefined) {
                return message.channel.send(`${message.author} dude do you think we can just figure this out by ourselves`);
            }

            const reportEmbed = new Discord.MessageEmbed()
            .setColor('#337800')
            .setTitle(`New Issue Report`)
            .setURL(`${args[1]}`)
            .setDescription(`New report generated by ${message.author}`)
            .addFields(
                {name: 'Page That Contains Issue', value: `${args[1]}`},
                {name: 'Reporter', value: `${message.author}`},
                {name: 'Reason', value: `See Author's Command`},
            )
            .setFooter(`Today at ${time}`);

            message.reply({ embeds: [reportEmbed]});
            console.log(`Issue Report Created (reportCreated = true)`);
        } else {
            return message.channel.send(`${message.author} my guy that isn't a valid thing to report`);
        }
    }
}